<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Nicolas Garcia Belmonte</title>
 <link href="http://blog.thejit.org/feed.xml" rel="self"/>
 <link href="http://blog.thejit.org/"/>
 <updated>2011-08-26T12:51:19-07:00</updated>
 <id>http://philogb.github.com/notes/</id>
 <author>
   <name>Nicolas Garcia Belmonte</name>
   <email>philogb@gmail.com</email>
 </author>

 
 <entry>
   <title>JavaScript InfoVis Toolkit</title>
   <link href="http://blog.thejit.orginfovis"/>
   <updated>2011-01-07T00:00:00-08:00</updated>
   <id>http://philogb.github.com/notes./javascript-infovis-toolkit</id>
   <content type="html">
    
      &lt;p&gt;The &lt;a href='http://thejit.org/'&gt;JavaScript InfoVis Toolkit&lt;/a&gt; provides tools for creating Interactive Data Visualizations for the Web.&lt;/p&gt;

&lt;p&gt;The toolkit implements advanced features of information visualization like &lt;a href='http://thejit.org/static/v20/Jit/Examples/Treemap/example1.html'&gt;TreeMaps&lt;/a&gt;, an adapted visualization of trees based on the &lt;a href='http://thejit.org/static/v20/Jit/Examples/Spacetree/example1.html'&gt;SpaceTree&lt;/a&gt;, a focus+context technique to plot &lt;a href='http://thejit.org/static/v20/Jit/Examples/Hypertree/example1.html'&gt;Hyperbolic Trees&lt;/a&gt;, a radial layout of trees with advanced animations -called &lt;a href='http://thejit.org/static/v20/Jit/Examples/RGraph/example1.html'&gt;RGraph&lt;/a&gt; and &lt;a href='http://thejit.org/demos/'&gt;other visualizations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In November 2010 &lt;a href='http://blog.thejit.org/2010/11/06/sencha-acquires-the-javascript-infovis-toolkit/'&gt;the toolkit was acquired by the Sencha Labs Foundation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The JavaScript InfoVis Toolkit has been chosen as a mentoring organization and project for the Google Summer of Code 2011.&lt;/p&gt;
&lt;iframe src='http://player.vimeo.com/video/28185669' frameborder='0' height='350' width='500' /&gt;
    
   </content>
 </entry>
 
 <entry>
   <title>PhiloGL</title>
   <link href="http://blog.thejit.orgphilogl"/>
   <updated>2011-01-06T00:00:00-08:00</updated>
   <id>http://philogb.github.com/notes./philogl</id>
   <content type="html">
    
      &lt;p&gt;&lt;a href='http://senchalabs.github.com/philogl/'&gt;PhiloGL&lt;/a&gt; is a WebGL Framework for advanced data visualization, creative coding and game development.&lt;/p&gt;

&lt;p&gt;PhiloGL uses cutting edge technology and JavaScript idioms and good practices to deliver elegantly coded WebGL applications that are focused on performance. PhiloGL also provides a rich module system covering Program and Shader management, IO, XHR, JSONP, Web Worker management, Effects and Tweening, and much more.&lt;/p&gt;

&lt;p&gt;PhiloGL is Open Source Software, licensed under the MIT license and owned by the &lt;a href='http://senchalabs.org/'&gt;SenchaLabs&lt;/a&gt; foundation.&lt;/p&gt;

&lt;p&gt;More information can be found in the &lt;a href='http://www.sencha.com/blog/introducing-philogl-a-webgl-javascript-library-from-sencha-labs/'&gt;Sencha article&lt;/a&gt; and the &lt;a href='http://arstechnica.com/open-source/news/2011/02/sencha-labs-releases-open-source-framework-for-webgl-development.ars'&gt;Ars Technica article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can access the main page of the framework by &lt;a href='http://senchalabs.github.com/philogl/'&gt;clicking here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some images of projects made with the framework:&lt;/p&gt;

&lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/worldflights.png' alt='World Flights' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/metaballs.png' alt='Metaballs' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/explorer.png' alt='Parametric surface explorer' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/histogram.png' alt='Color histogram analysis' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/tanomalies.png' alt='World temperature anomalies' /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/quaternion.png' alt='Quaternion julia fractal' /&gt;&lt;/p&gt;
    
   </content>
 </entry>
 
 <entry>
   <title>Firefox 4 UI Study</title>
   <link href="http://blog.thejit.orgfirefox-ui-study"/>
   <updated>2011-01-05T00:00:00-08:00</updated>
   <id>http://philogb.github.com/notes./firefox-ui-study</id>
   <content type="html">
    
      &lt;p&gt;Launch the Visualization by &lt;a href='http://blog.thejit.org/assets/modvc/pilot/pilot.html'&gt;clicking here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://uxnerd.com/'&gt;Maria Luz Caballero&lt;/a&gt; and me have been working together for a couple of weeks to create an interesting visualization for the &lt;a href='http://design-challenge.mozillalabs.com/open-data/OpenDataCompetition/'&gt;Mozilla Open Data Visualization Challenge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Mozilla is releasing a new version of Firefox, version 4. This new version introduces a new UI and they have been monitoring how users interact with the different UI components of Firefox 4. They gathered some interesting information about how UI components are accessed and other elements taken by a survey to the Firefox users describe their expertise level, age, place where Firefox is used, etc.&lt;/p&gt;

&lt;p&gt;We decided that this information could be visualized as a TreeMap in which the area of each node is proportional to the number of times a UI component has been accessed. For example in this image we can see that around 20% of UI interactions happen in the Navigation Toolbar, and it&amp;#8217;s possible to compare the area of this rectangle to others to give us a clue of the overall interactions:&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/modvc/tm1.png' alt='Navigation Toolbar access tooltip image' /&gt;&lt;/p&gt;

&lt;p&gt;Each node also has a color that spans from red to blue, indicating an average of the expertise level of the user interacting with this component.&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/modvc/tm2.png' alt='Color span gradient' /&gt;&lt;/p&gt;

&lt;p&gt;It&amp;#8217;s interesting to note how some components are more often accessed by expert users than by beginners and viceversa. However since we provide an &lt;em&gt;average&lt;/em&gt; we lack the information about the &lt;em&gt;real distribution&lt;/em&gt; of user skills accessing the component. In order to avoid misleading results, when drilling down the TreeMap PieCharts indicate the real user skill distribution for each UI component interaction.&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/modvc/tm3.png' alt='PieCharts as nodes for skill distribution' /&gt;&lt;/p&gt;

&lt;p&gt;What I believe is by far the most interesting aspect of this visualization is the fact of using the ordinal and nominal information provided by the user survey to provide dynamic filtering for the TreeMap. Dynamic filtering (or morphing) enables an easy comparison between different categories of users on how they interact with these components. The filter panel we provide is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/modvc/tm4.png' alt='Dynamic Filtering Panel' /&gt;&lt;/p&gt;

&lt;p&gt;If you&amp;#8217;re interested in taking a look at the visualization and playing with it please go to our &lt;a href='http://blog.thejit.org/assets/modvc/pilot/pilot.html'&gt;entry&lt;/a&gt;. Browsers supported are Firefox 4, Opera 10.6+ and the latest of the Webkit family.&lt;/p&gt;
    
   </content>
 </entry>
 
 <entry>
   <title>Parametric Surface Explorer</title>
   <link href="http://blog.thejit.orgsurface-explorer"/>
   <updated>2011-01-04T00:00:00-08:00</updated>
   <id>http://philogb.github.com/notes./parametric-surface-explorer</id>
   <content type="html">
    
      &lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/explorer.png' alt='3D Parametric Surfaces' /&gt;&lt;/p&gt;

&lt;p&gt;Exploring 3D surfaces is a fun way to learn about geometry, physical phenomena or even terrain modeling. Parametric surfaces are surfaces that also change their shape with an extra variable: &lt;em&gt;time&lt;/em&gt;. Explore 3D surfaces by using drag and drop and the mouse wheel to zoom in/out. You can enable the &lt;em&gt;t&lt;/em&gt; parameter (by clicking on the checkbox) and hit play to see it move. There are three predefined surfaces for you to explore or modify.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href='http://senchalabs.github.com/philogl/PhiloGL/examples/explorer/'&gt;Click here&lt;/a&gt; to access the example. You will need a WebGL capable browser (and machine).&lt;/strong&gt;&lt;/p&gt;
&lt;iframe src='http://www.youtube.com/embed/J6IM1QS2l10?rel=0' frameborder='0' height='390' width='480' /&gt;
    
   </content>
 </entry>
 
 <entry>
   <title>Color Histogram Analysis</title>
   <link href="http://blog.thejit.orgcolor-analysis"/>
   <updated>2011-01-03T00:00:00-08:00</updated>
   <id>http://philogb.github.com/notes./color-analysis</id>
   <content type="html">
    
      &lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/histogram.png' alt='3D color Histogram Analysis' /&gt;&lt;/p&gt;

&lt;p&gt;Color decomposition on &lt;a href='http://en.wikipedia.org/wiki/RGB_color_model#Geometric_representation'&gt;RGB&lt;/a&gt; or &lt;a href='http://en.wikipedia.org/wiki/HSL_and_HSV'&gt;other color schemes&lt;/a&gt; takes a 3D form. In order to show the color decomposition of an image each dot on a 3D color histogram is assigned a different diameter. The following example renders fine grain and precise color decomposition schemes of each frame of a video in real time. Notice how color varies on each take, and feel free to change the color scheme or pause the video to have a closer look at the color decomposition. You can interact with the visualization by using drag and drop and zooming in/out with your mouse wheel.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href='http://senchalabs.github.com/philogl/PhiloGL/examples/histogram/'&gt;Click here&lt;/a&gt; to access the example. You will need a WebGL capable browser (and machine).&lt;/strong&gt;&lt;/p&gt;
&lt;iframe src='http://www.youtube.com/embed/ec-4GWoeYoU?rel=0' frameborder='0' height='390' width='480' /&gt;
    
   </content>
 </entry>
 
 <entry>
   <title>US Budget Visualization</title>
   <link href="http://blog.thejit.orgus-budget"/>
   <updated>2011-01-02T00:00:00-08:00</updated>
   <id>http://philogb.github.com/notes./us-budget</id>
   <content type="html">
    
      &lt;p&gt;Launch the Visualization by &lt;a href='http://blog.thejit.org/assets/dataviz/index.html'&gt;clicking here&lt;/a&gt; (browsers supported are the latest of Google Chrome, Firefox, Opera and Safari -not IE).&lt;/p&gt;

&lt;p&gt;Every year, Americans fill out income tax forms and make a payment to the IRS. Where does it all go? Using data provided by WhatWePayFor.com, &lt;a href='http://uxnerd.com/'&gt;Luz Caballero&lt;/a&gt; and I created a data visualization that will make it easier to understand how the government spends our tax money.&lt;/p&gt;

&lt;h2 id='the_visualization'&gt;The Visualization&lt;/h2&gt;

&lt;p&gt;This visualization is made of two components. First, a tree layout shows, for each given year, how the budget (blue) is divided on each function (green), subfunction (yellow), and &amp;#8220;account&amp;#8221; (the most granular subdivision accounted for in the budget, which gives an idea of the use to which the money is put) (red):&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/dataviz/icicle.png' alt='Icicle Layout' /&gt;&lt;/p&gt;

&lt;p&gt;The height of each node/section in the tree is proportional to the amount of the budget spent on that function, subfunction or &amp;#8220;account&amp;#8221;. &lt;strong&gt;You can click on the nodes to navigate and filter functions and subfunctions&lt;/strong&gt;. To go back you can right-click or click in the back arrow on the left of the visualization.&lt;/p&gt;

&lt;p&gt;The second component of the application is a timeline that puts the amounts you are visualizing in the tree in a temporal context, showing the evolution of that particular spending category through time. &lt;strong&gt;Click on the bars representing the different years to navigate through time&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/dataviz/timeline.png' alt='Timeline' /&gt;&lt;/p&gt;

&lt;p&gt;We wanted to allow our users to compare today&amp;#8217;s spending to the 80s&amp;#8217; without artifacts caused by inflation, and changes in population and GDP. This is why our visualization shows inflation-adjusted USD, gives you the the option to see spending in USD, in USD per capita, or as a percentage of the time&amp;#8217;s GDP. Plus, we wanted to give our users a good shot at pinpointing if/when spending changes are a consequence of government policy or of the economic climate. This is why you can overlay indicators like debt, GDP, inflation and yr/yr population change, to give you an idea of how they affect and are influenced by spending trends.&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/dataviz/timeline-debt.png' alt='Timeline' /&gt;&lt;/p&gt;

&lt;h2 id='interaction'&gt;Interaction&lt;/h2&gt;

&lt;p&gt;What makes this application most interesting is the interaction between the components, which are tightly coupled.&lt;/p&gt;

&lt;p&gt;When a function is selected, the timeline will adapt to show the budget spending trend for that particular function over the years.&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/dataviz/timeline2.png' alt='Interacting with the Icicle tree' /&gt;&lt;/p&gt;

&lt;p&gt;When clicking on a timeline element, the tree will animate to show how the budget is spent on each function, subfunction and account, for the selected year.&lt;/p&gt;

&lt;p&gt;If you are interested in comparing how the budget changed between two different moments in time, there is an option to transition between years using colors, red and green, to highlight a decrease or increase of total budget spending for each item.&lt;/p&gt;

&lt;p&gt;&lt;img src='/assets/dataviz/icicle2.png' alt='Interacting with the Icicle tree' /&gt;&lt;/p&gt;

&lt;h2 id='demo_video'&gt;Demo Video&lt;/h2&gt;

&lt;p&gt;We created a video that shows how to navigate and filter data and some interesting finds we made using our visualization. &lt;a href='http://www.youtube.com/watch?v=WUtwn7wB9Hs&amp;amp;hd=1'&gt;Click here&lt;/a&gt; to see the video in HD.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://blog.thejit.org/assets/dataviz/'&gt;Click here&lt;/a&gt; to access the visualization.&lt;/p&gt;
&lt;iframe src='http://www.youtube.com/embed/WUtwn7wB9Hs?rel=0' frameborder='0' height='390' width='480' /&gt;
    
   </content>
 </entry>
 
 <entry>
   <title>World Temperature Anomalies</title>
   <link href="http://blog.thejit.orgtemperature-anomalies"/>
   <updated>2011-01-01T00:00:00-08:00</updated>
   <id>http://philogb.github.com/notes./temperature-anomalies</id>
   <content type="html">
    
      &lt;p&gt;&lt;img src='http://senchalabs.github.com/philogl/img/marquee/tanomalies.png' alt='World temperature anomalies image' /&gt;&lt;/p&gt;

&lt;p&gt;NASA collects year by year data about temperature changes around the globe. This information has been collected since 1880 and tracks temperature anomalies (changes) in different points of the earth as a 2D heatmap. By loading these images into textures and then mapping them into a 3D histogram we are able to track the temperature changes around the globe interactively. Smooth animations between date ranges enable us to spot the overall differences in temperature across the years. Can you guess what the temperature changes will be for the next decade?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href='http://senchalabs.github.com/philogl/PhiloGL/examples/temperatureAnomalies/'&gt;Click here to access the example&lt;/a&gt;. You will need a WebGL capable browser (and machine).&lt;/strong&gt;&lt;/p&gt;
&lt;iframe src='http://www.youtube.com/embed/NzDA2Rj3_uE?rel=0' frameborder='0' height='390' width='480' /&gt;
    
   </content>
 </entry>
 
 
</feed>
